---
title: "Assignment 5"
author: "Liam Cook"
date: "2025-04-02"
format:
  revealjs:
    self-contained: true
---



```{r echo=FALSE}
# Each question is worth 5 marks for a total of 15. The grade will be scaled to 10 in Brightspace so that each assignment is worth the same amount.
```



```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, fig.align = 'center', fig.width = 7, fig.asp = 0.5, dpi=150)
library(tidyverse, quietly = TRUE)
library(maps)
library(mapproj)
library(ggthemes)
# library(tidytuesdayR)
library(janitor)
```


## Question 1 World map

```{r}
# KEEPIT  solution code for question 1
# but do not show the code in the slide presentation

world_map <- map_data("world2")

world_flipped <- world_map |>
  mutate(lat = -lat)

ggplot(world_flipped, aes(long, lat, group = group)) +
  geom_map(map = world_flipped, aes(map_id = region), fill = "skyblue", color = "gray30", size = 0.1) +
  coord_map("mollweide") +
  theme_map()
```


```{r data, include = FALSE, cache=TRUE}
# Code to access original source is commented out below; I have given you a copy of the data in the repository.
# tuesdata <- tidytuesdayR::tt_load(2020, week = 36)
# key_crop_yields <- tuesdata$key_crop_yields
# key_crop_yields <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-01/key_crop_yields.csv')
# The variable names in this data table have spaces in them, making it hard to work with the names
# I will use the janitor page to simplify the names
key_crop_yields <- read_csv("key_crop_yields.csv") |>
  janitor::clean_names()
```


## Question 2 Map


```{r eval=TRUE}
# KEEPIT  solution code for question 2
# but do not show the code in the slide presentation and remove eval=TRUE when your code is good

key_crop_yields |>
  filter(year == 2016) |>
  rename(region = entity) |>
  ggplot(aes(map_id = region)) +
  geom_map(aes(fill = rice_tonnes_per_hectare), map = map_data("world"), color = "gray30", size = 0.1) +
  expand_limits(x = map_data("world")$long, y = map_data("world")$lat) +
  scale_fill_viridis_c(option = "plasma", name = "Rice Yield\n(tonnes/ha)", na.value = "grey90") +
  theme_map() +
  theme(
    legend.position = "bottom",
    legend.direction = "horizontal")
```

```{r tilemap, cache=TRUE}
# link = "https://gist.githubusercontent.com/maartenzam/787498bbc07ae06b637447dbd430ea0a/raw/9a9dafafb44d8990f85243a9c7ca349acd3a0d07/worldtilegrid.csv"
# geodata <- read.csv(link) |> as_tibble() # load in geodata
geodata <- read_csv("geodata.csv")
```


```{r eval=TRUE}
crop_subset <- key_crop_yields |> 
  filter(year == 2016) |> 
  rename(rice = rice_tonnes_per_hectare, name = entity) |> 
  select(name, rice)

geodata_plus_crop <- left_join(geodata, crop_subset, by = "name")

```


## Question 3 Map

```{r}
# KEEPIT  solution code for question 3
# but do not show the code in the slide presentation 

ggplot(geodata_plus_crop) +
  geom_rect(aes(xmin = x, ymin = y, 
                xmax = x + 1, ymax = y + 1,
                fill = rice)) +
  geom_text(aes(x = x + 0.5, y = y + 0.5, label = alpha.3),
            size = 1.5,
            vjust = 0.5, hjust = 0.5) +
  scale_y_reverse() +
  scale_fill_viridis_c(option = "magma", name = "Rice Yield", na.value = "grey90") +
  theme_void()

```
